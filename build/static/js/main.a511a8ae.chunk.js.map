{"version":3,"sources":["index.js"],"names":["tf","threshold","_callee","model","C_Users_tunce_Desktop_TFJS_object_detection_master_TFJS_object_detection_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","loadGraphModel","sent","abrupt","stop","classesDir","1","name","id","2","App","videoRef","React","createRef","canvasRef","detectFrame","video","startScope","executeAsync","_this","process_input","then","predictions","renderPredictions","requestAnimationFrame","endScope","ctx","current","getContext","clearRect","canvas","width","height","font","textBaseline","boxes","arraySync","scores","classes","dataSync","console","log","Array","from","detections","buildDetectedObjects","forEach","item","x","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","toFixed","textHeight","parseInt","fillRect","fillText","_this2","this","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","load_model","all","values","catch","error","video_frame","fromPixels","toInt","transpose","expandDims","detectionObjects","document","getElementById","score","i","bbox","minY","offsetHeight","minX","offsetWidth","maxY","maxX","push","class","label","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","style","className","autoPlay","playsInline","muted","ref","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.a511a8ae.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { loadGraphModel } from \"@tensorflow/tfjs-converter\";\nimport \"./styles.css\";\ntf.setBackend(\"webgl\");\n\nconst threshold = 0.5;\n\nasync function load_model() {\n  // It's possible to load the model locally or from a repo\n  // You can choose whatever IP and PORT you want in the \"http://127.0.0.1:8080/model.json\" just set it before in your https server\n  //const model = await loadGraphModel(\"http://127.0.0.1:8080/model.json\");\n  const model = await loadGraphModel(\n    \"https://raw.githubusercontent.com/UlkuTuncerKucuktas/GRnew/main/model.json\"\n  );\n  return model;\n}\n\nlet classesDir = {\n  1: {\n    name: \"Uzum\",\n    id: 1,\n  },\n  2: {\n    name: \"Other\",\n    id: 2,\n  },\n};\n\nclass App extends React.Component {\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n\n  componentDidMount() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\",\n          },\n        })\n        .then((stream) => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n\n      const modelPromise = load_model();\n\n      Promise.all([modelPromise, webCamPromise])\n        .then((values) => {\n          this.detectFrame(this.videoRef.current, values[0]);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }\n\n  detectFrame = (video, model) => {\n    tf.engine().startScope();\n    model.executeAsync(this.process_input(video)).then((predictions) => {\n      this.renderPredictions(predictions, video);\n      requestAnimationFrame(() => {\n        this.detectFrame(video, model);\n      });\n      tf.engine().endScope();\n    });\n  };\n\n  process_input(video_frame) {\n    const tfimg = tf.browser.fromPixels(video_frame).toInt();\n    const expandedimg = tfimg.transpose([0, 1, 2]).expandDims();\n    return expandedimg;\n  }\n\n  buildDetectedObjects(scores, threshold, boxes, classes, classesDir) {\n    const detectionObjects = [];\n    var video_frame = document.getElementById(\"frame\");\n\n    scores[0].forEach((score, i) => {\n      if (score > threshold) {\n        const bbox = [];\n        console.log(classes[0]);\n        const minY = boxes[0][i][0] * video_frame.offsetHeight;\n        const minX = boxes[0][i][1] * video_frame.offsetWidth;\n        const maxY = boxes[0][i][2] * video_frame.offsetHeight;\n        const maxX = boxes[0][i][3] * video_frame.offsetWidth;\n        bbox[0] = minX;\n        bbox[1] = minY;\n        bbox[2] = maxX - minX;\n        bbox[3] = maxY - minY;\n\n        detectionObjects.push({\n          class: classes[i],\n          label: \"Uzum\",\n          score: score.toFixed(4),\n          bbox: bbox,\n        });\n      }\n    });\n    return detectionObjects;\n  }\n\n  renderPredictions = (predictions) => {\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Font options.\n    const font = \"16px sans-serif\";\n    ctx.font = font;\n    ctx.textBaseline = \"top\";\n\n    //Getting predictions\n    const boxes = predictions[1].arraySync();\n    const scores = predictions[5].arraySync();\n    const classes = predictions[2].dataSync();\n    console.log(Array.from(classes));\n    const detections = this.buildDetectedObjects(\n      scores,\n      threshold,\n      boxes,\n      classes,\n      classesDir\n    );\n\n    detections.forEach((item) => {\n      const x = item[\"bbox\"][0];\n      const y = item[\"bbox\"][1];\n      const width = item[\"bbox\"][2];\n      const height = item[\"bbox\"][3];\n\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#00FFFF\";\n      ctx.lineWidth = 4;\n      ctx.strokeRect(x, y, width, height);\n\n      // Draw the label background.\n      ctx.fillStyle = \"#00FFFF\";\n      const textWidth = ctx.measureText(\n        item[\"label\"] + \" \" + (100 * item[\"score\"]).toFixed(2) + \"%\"\n      ).width;\n      const textHeight = parseInt(font, 10); // base 10\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n    });\n\n    detections.forEach((item) => {\n      const x = item[\"bbox\"][0];\n      const y = item[\"bbox\"][1];\n\n      // Draw the text last to ensure it's on top.\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(\n        item[\"label\"] + \" \" + (100 * item[\"score\"]).toFixed(2) + \"%\",\n        x,\n        y\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Real-Time Object Detection: Kangaroo</h1>\n        <h3>MobileNetV2</h3>\n        <video\n          style={{ height: \"600px\", width: \"500px\" }}\n          className=\"size\"\n          autoPlay\n          playsInline\n          muted\n          ref={this.videoRef}\n          width=\"600\"\n          height=\"500\"\n          id=\"frame\"\n        />\n        <canvas\n          className=\"size\"\n          ref={this.canvasRef}\n          width=\"600\"\n          height=\"500\"\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}